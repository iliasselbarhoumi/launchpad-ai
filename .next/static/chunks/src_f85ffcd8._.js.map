{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/mediliass/Desktop/codebase/Labs/saas-templates/launchpad-ai/src/data/ideas.tsx"],"sourcesContent":["import { Idea } from \"@/app/components/ideas/IdeaCard\";\n\nexport const mockIdeas: Idea[] = [\n  {\n    id: 1,\n    title: \"AI-Powered Meal Planner\",\n    description:\n      \"Generates weekly meal plans based on dietary preferences, available ingredients, and nutritional goals.\",\n    tags: [\"Health & Wellness\", \"Personalization\"],\n  },\n  {\n    id: 2,\n    title: \"Automated Social Media Content Scheduler\",\n    description:\n      \"Analyzes best times to post and automatically schedules content for maximum engagement.\",\n    tags: [\"Marketing & Sales\", \"Automation\"],\n  },\n  {\n    id: 3,\n    title: \"Gamified Language Learning App for Niche Languages\",\n    description:\n      \"Uses gamification to make learning less common languages fun and engaging.\",\n    tags: [\"Education & Learning\", \"Community Building\"],\n  },\n  {\n    id: 4,\n    title: \"Smart Expense Tracker for Freelancers\",\n    description:\n      \"Automatically categorizes expenses from bank statements and helps with tax preparation.\",\n    tags: [\"Financial Management\", \"B2B\"],\n  },\n];\n"],"names":[],"mappings":";;;AAEO,MAAM,YAAoB;IAC/B;QACE,IAAI;QACJ,OAAO;QACP,aACE;QACF,MAAM;YAAC;YAAqB;SAAkB;IAChD;IACA;QACE,IAAI;QACJ,OAAO;QACP,aACE;QACF,MAAM;YAAC;YAAqB;SAAa;IAC3C;IACA;QACE,IAAI;QACJ,OAAO;QACP,aACE;QACF,MAAM;YAAC;YAAwB;SAAqB;IACtD;IACA;QACE,IAAI;QACJ,OAAO;QACP,aACE;QACF,MAAM;YAAC;YAAwB;SAAM;IACvC;CACD","debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///Users/mediliass/Desktop/codebase/Labs/saas-templates/launchpad-ai/src/app/components/ui/card.tsx"],"sourcesContent":["\"use client\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n"],"names":[],"mappings":";;;;;;;;;AACA;AAEA;AAHA;;;;AAKA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file:///Users/mediliass/Desktop/codebase/Labs/saas-templates/launchpad-ai/src/components/ideas/MvpPlanResult.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n} from \"@/app/components/ui/card\";\nimport {\n  FileText,\n  Target,\n  Briefcase,\n  TrendingUp,\n  DollarSign,\n  Award,\n  CheckCircle,\n  XCircle,\n} from \"lucide-react\";\nimport {\n  ResponsiveContainer,\n  BarChart,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Bar,\n  RadialBarChart,\n  PolarAngleAxis,\n  RadialBar,\n} from \"recharts\";\nimport { cn } from \"@/lib/utils\";\nimport { Idea } from \"@/app/components/ideas/IdeaCard\";\n\nexport interface Plan {\n  businessConcept: {\n    elevatorPitch: string;\n    problem: string;\n    solution: string;\n    targetAudience: string;\n    uniqueValueProposition: string;\n  };\n  marketIntelligence: {\n    marketSize: string;\n    marketData: Array<{ name: string; value: number }>;\n    trends: string[];\n    competitors: Array<{\n      name: string;\n      strengths: string;\n      weaknesses: string;\n      gap: string;\n    }>;\n  };\n  productStrategy: {\n    coreFeatures: Array<{\n      name: string;\n      description: string;\n      priority: string;\n      aiPowered: boolean;\n    }>;\n    mvpScope: string;\n  };\n  goToMarket: {\n    strategy: string;\n    channels: string[];\n    initialTractionMetric: string;\n  };\n  financials: {\n    model: string;\n    risks: Array<{\n      risk: string;\n      mitigation: string;\n    }>;\n  };\n  evaluation: {\n    score: number;\n    summary: string;\n    strategicOptionalities: string[];\n  };\n}\n\ninterface MvpPlanResultProps {\n  idea: Idea;\n  plan: Plan;\n}\n\nconst planSections = [\n  { id: \"business-concept\", title: \"Business Concept\", icon: FileText },\n  { id: \"market-intelligence\", title: \"Market Intelligence\", icon: Target },\n  { id: \"product-strategy\", title: \"Product Strategy\", icon: Briefcase },\n  { id: \"go-to-market\", title: \"Go-to-Market\", icon: TrendingUp },\n  { id: \"financials\", title: \"Financials\", icon: DollarSign },\n  { id: \"evaluation\", title: \"Evaluation\", icon: Award },\n];\n\nconst SectionHeader = ({\n  id,\n  title,\n  icon: Icon,\n}: {\n  id: string;\n  title: string;\n  icon: React.ElementType;\n}) => (\n  <div\n    id={id}\n    className=\"flex items-center gap-3 pt-6 mb-6 border-t border-slate-200/80 first:pt-0 first:border-t-0 scroll-mt-28\"\n  >\n    <div className=\"flex-shrink-0 w-10 h-10 rounded-lg bg-slate-100 flex items-center justify-center\">\n      <Icon className=\"w-5 h-5 text-slate-600\" />\n    </div>\n    <h2 className=\"text-2xl font-bold font-display text-slate-800\">{title}</h2>\n  </div>\n);\n\nconst InfoBlock = ({\n  title,\n  children,\n}: {\n  title: string;\n  children: React.ReactNode;\n}) => (\n  <Card className=\"mb-4\">\n    <CardHeader>\n      <CardDescription className=\"uppercase font-semibold tracking-wider\">\n        {title}\n      </CardDescription>\n    </CardHeader>\n    <CardContent className=\"prose prose-slate max-w-none text-slate-800\">\n      {children}\n    </CardContent>\n  </Card>\n);\n\nconst MarketSizeChart = ({\n  data,\n}: {\n  data: Array<{ name: string; value: number }>;\n}) => (\n  <Card>\n    <CardHeader>\n      <CardTitle>Market Size (in Billions USD)</CardTitle>\n      <CardDescription>TAM, SAM, & SOM estimates.</CardDescription>\n    </CardHeader>\n    <CardContent>\n      <div style={{ width: \"100%\", height: 300 }}>\n        <ResponsiveContainer>\n          <BarChart\n            data={data}\n            margin={{ top: 5, right: 20, left: -10, bottom: 5 }}\n          >\n            <XAxis\n              dataKey=\"name\"\n              stroke=\"#888888\"\n              fontSize={12}\n              tickLine={false}\n              axisLine={false}\n            />\n            <YAxis\n              stroke=\"#888888\"\n              fontSize={12}\n              tickLine={false}\n              axisLine={false}\n              tickFormatter={(value) => `$${value}`}\n            />\n            <Tooltip\n              cursor={{ fill: \"hsl(var(--muted))\" }}\n              contentStyle={{\n                background: \"hsl(var(--background))\",\n                border: \"1px solid hsl(var(--border))\",\n                borderRadius: \"var(--radius)\",\n              }}\n            />\n            <Bar dataKey=\"value\" radius={[4, 4, 0, 0]} />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    </CardContent>\n  </Card>\n);\n\nconst EvaluationScoreGauge = ({ score }: { score: number }) => {\n  const data = [{ name: \"score\", value: score }];\n  return (\n    <Card className=\"flex flex-col items-center justify-center text-center\">\n      <CardHeader>\n        <CardTitle>Overall Score</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div style={{ width: \"100%\", height: 180 }}>\n          <ResponsiveContainer>\n            <RadialBarChart\n              innerRadius=\"70%\"\n              outerRadius=\"100%\"\n              data={data}\n              startAngle={180}\n              endAngle={0}\n              barSize={30}\n            >\n              <PolarAngleAxis\n                type=\"number\"\n                domain={[0, 10]}\n                angleAxisId={0}\n                tick={false}\n              />\n              <RadialBar\n                background\n                dataKey=\"value\"\n                cornerRadius={15}\n                angleAxisId={0}\n                fill=\"hsl(var(--primary))\"\n              />\n            </RadialBarChart>\n          </ResponsiveContainer>\n        </div>\n        <p className=\"text-4xl font-bold font-display text-slate-800 -mt-16\">\n          {score}/10\n        </p>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst MvpPlanResult: React.FC<MvpPlanResultProps> = ({ idea, plan }) => {\n  const [activeSection, setActiveSection] = useState(planSections[0].id);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setActiveSection(entry.target.id);\n          }\n        });\n      },\n      { rootMargin: \"-50% 0px -50% 0px\", threshold: 0 }\n    );\n\n    planSections.forEach((section) => {\n      const el = document.getElementById(section.id);\n      if (el) observer.observe(el);\n    });\n\n    return () => observer.disconnect();\n  }, []);\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n      className=\"flex flex-col md:flex-row gap-8 lg:gap-12\"\n    >\n      <aside className=\"md:w-1/4 lg:w-1/5 md:sticky top-28 self-start\">\n        <nav>\n          <h3 className=\"text-sm font-semibold text-slate-500 uppercase tracking-wider mb-3 px-3\">\n            Plan Sections\n          </h3>\n          <ul>\n            {planSections.map((section) => (\n              <li key={section.id}>\n                <a\n                  href={`#${section.id}`}\n                  className={cn(\n                    \"block py-2 px-3 rounded-md font-medium transition-colors text-base flex items-center gap-3\",\n                    activeSection === section.id\n                      ? \"bg-launchpad-purple/10 text-launchpad-purple\"\n                      : \"hover:bg-slate-100 text-slate-700\"\n                  )}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    document\n                      .getElementById(section.id)\n                      ?.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n                  }}\n                >\n                  <section.icon className=\"h-4 w-4\" />\n                  <span>{section.title}</span>\n                </a>\n              </li>\n            ))}\n          </ul>\n        </nav>\n      </aside>\n\n      <main className=\"flex-1 min-w-0\">\n        <Card className=\"overflow-hidden mb-8\">\n          <CardHeader className=\"bg-slate-50/70 border-b\">\n            <p className=\"text-sm font-medium text-launchpad-purple\">\n              AI-Generated Business Plan\n            </p>\n            <CardTitle className=\"text-2xl md:text-3xl font-display font-bold\">\n              {idea.title}\n            </CardTitle>\n          </CardHeader>\n        </Card>\n\n        <div className=\"space-y-12\">\n          <section>\n            <SectionHeader\n              id=\"business-concept\"\n              title=\"Business Concept\"\n              icon={FileText}\n            />\n            <div className=\"space-y-4\">\n              <InfoBlock title=\"Elevator Pitch\">\n                {plan.businessConcept.elevatorPitch}\n              </InfoBlock>\n              <InfoBlock title=\"Problem\">\n                {plan.businessConcept.problem}\n              </InfoBlock>\n              <InfoBlock title=\"Solution\">\n                {plan.businessConcept.solution}\n              </InfoBlock>\n              <InfoBlock title=\"Target Audience\">\n                {plan.businessConcept.targetAudience}\n              </InfoBlock>\n              <InfoBlock title=\"Unique Value Proposition\">\n                {plan.businessConcept.uniqueValueProposition}\n              </InfoBlock>\n            </div>\n          </section>\n\n          <section>\n            <SectionHeader\n              id=\"market-intelligence\"\n              title=\"Market Intelligence\"\n              icon={Target}\n            />\n            <div className=\"space-y-4\">\n              <InfoBlock title=\"Market Size & Opportunity\">\n                {plan.marketIntelligence.marketSize}\n              </InfoBlock>\n              <MarketSizeChart data={plan.marketIntelligence.marketData} />\n              <Card>\n                <CardHeader>\n                  <CardTitle>Key Trends</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <ul className=\"list-disc pl-5 space-y-2 text-slate-700\">\n                    {plan.marketIntelligence.trends.map((trend: string) => (\n                      <li key={trend}>{trend}</li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardHeader>\n                  <CardTitle>Competitor Analysis</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  {plan.marketIntelligence.competitors.map((c) => (\n                    <div key={c.name} className=\"p-4 border rounded-lg\">\n                      <h4 className=\"font-bold text-lg text-slate-800\">\n                        {c.name}\n                      </h4>\n                      <p>\n                        <strong className=\"font-semibold\">Strengths:</strong>{\" \"}\n                        {c.strengths}\n                      </p>\n                      <p>\n                        <strong className=\"font-semibold\">Weaknesses:</strong>{\" \"}\n                        {c.weaknesses}\n                      </p>\n                      <p className=\"mt-2 p-2 bg-slate-50 rounded\">\n                        <strong className=\"font-semibold text-launchpad-purple\">\n                          Gap / Opportunity:\n                        </strong>{\" \"}\n                        {c.gap}\n                      </p>\n                    </div>\n                  ))}\n                </CardContent>\n              </Card>\n            </div>\n          </section>\n\n          <section>\n            <SectionHeader\n              id=\"product-strategy\"\n              title=\"Product Strategy\"\n              icon={Briefcase}\n            />\n            <div className=\"space-y-4\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Core Features</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full text-left\">\n                      <thead>\n                        <tr className=\"border-b\">\n                          <th className=\"p-2\">Feature</th>\n                          <th className=\"p-2\">Priority</th>\n                          <th className=\"p-2\">AI?</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {plan.productStrategy.coreFeatures.map((f) => (\n                          <tr key={f.name} className=\"border-b\">\n                            <td className=\"p-2\">\n                              <strong className=\"font-semibold\">\n                                {f.name}\n                              </strong>\n                              <p className=\"text-sm text-slate-600\">\n                                {f.description}\n                              </p>\n                            </td>\n                            <td className=\"p-2\">{f.priority}</td>\n                            <td className=\"p-2\">\n                              {f.aiPowered ? (\n                                <CheckCircle className=\"text-green-500\" />\n                              ) : (\n                                <XCircle className=\"text-red-500\" />\n                              )}\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </CardContent>\n              </Card>\n              <InfoBlock title=\"MVP Scope\">\n                {plan.productStrategy.mvpScope}\n              </InfoBlock>\n            </div>\n          </section>\n\n          <section>\n            <SectionHeader\n              id=\"go-to-market\"\n              title=\"Go-to-Market\"\n              icon={TrendingUp}\n            />\n            <div className=\"space-y-4\">\n              <InfoBlock title=\"Strategy\">{plan.goToMarket.strategy}</InfoBlock>\n              <Card>\n                <CardHeader>\n                  <CardTitle>Acquisition Channels</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <ul className=\"list-disc pl-5 space-y-2 text-slate-700\">\n                    {plan.goToMarket.channels.map((channel: string) => (\n                      <li key={channel}>{channel}</li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n              <InfoBlock title=\"Initial Traction Metric\">\n                {plan.goToMarket.initialTractionMetric}\n              </InfoBlock>\n            </div>\n          </section>\n\n          <section>\n            <SectionHeader\n              id=\"financials\"\n              title=\"Financials\"\n              icon={DollarSign}\n            />\n            <div className=\"space-y-4\">\n              <InfoBlock title=\"Business Model\">\n                {plan.financials.model}\n              </InfoBlock>\n              <Card>\n                <CardHeader>\n                  <CardTitle>Risks & Mitigations</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  {plan.financials.risks.map((r) => (\n                    <div key={r.risk} className=\"p-4 border rounded-lg\">\n                      <h4 className=\"font-bold text-slate-800\">{r.risk}</h4>\n                      <p className=\"mt-1 text-slate-600\">{r.mitigation}</p>\n                    </div>\n                  ))}\n                </CardContent>\n              </Card>\n            </div>\n          </section>\n\n          <section>\n            <SectionHeader id=\"evaluation\" title=\"Evaluation\" icon={Award} />\n            <div className=\"grid md:grid-cols-2 gap-4\">\n              <EvaluationScoreGauge score={plan.evaluation.score} />\n              <div className=\"space-y-4\">\n                <InfoBlock title=\"Summary\">{plan.evaluation.summary}</InfoBlock>\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Strategic Optionalities</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <ul className=\"list-disc pl-5 space-y-2 text-slate-700\">\n                      {plan.evaluation.strategicOptionalities.map(\n                        (item: string) => (\n                          <li key={item}>{item}</li>\n                        )\n                      )}\n                    </ul>\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n          </section>\n        </div>\n      </main>\n    </motion.div>\n  );\n};\n\nexport default MvpPlanResult;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1390, "column": 0}, "map": {"version":3,"sources":["file:///Users/mediliass/Desktop/codebase/Labs/saas-templates/launchpad-ai/src/app/components/ui/progress.tsx"],"sourcesContent":["\"use client\";\nimport * as React from \"react\";\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n));\nProgress.displayName = ProgressPrimitive.Root.displayName;\n\nexport { Progress };\n"],"names":[],"mappings":";;;;AACA;AACA;AAEA;AAJA;;;;;AAMA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1436, "column": 0}, "map": {"version":3,"sources":["file:///Users/mediliass/Desktop/codebase/Labs/saas-templates/launchpad-ai/src/components/ideas/GeneratingMvpPlan.tsx"],"sourcesContent":["import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Briefcase } from \"lucide-react\";\nimport { Progress } from \"@/app/components/ui/progress\";\n\ninterface GeneratingMvpPlanProps {\n  progress: number;\n}\n\nconst GeneratingMvpPlan: React.FC<GeneratingMvpPlanProps> = ({ progress }) => {\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      exit={{ opacity: 0, y: -20 }}\n      transition={{ duration: 0.5 }}\n      className=\"text-center py-20 px-6 bg-white rounded-xl border border-slate-200/80 shadow-sm\"\n    >\n      <div className=\"w-20 h-20 mx-auto mb-6 rounded-full flex items-center justify-center bg-gradient-to-br from-launchpad-purple/10 to-launchpad-purple-light/10\">\n        <Briefcase\n          className=\"w-10 h-10 text-launchpad-purple\"\n          strokeWidth={1.5}\n        />\n      </div>\n      <h2 className=\"text-2xl md:text-3xl font-bold font-display text-slate-800 mb-3\">\n        Generating Your Business Plan\n      </h2>\n      <p className=\"text-slate-500 max-w-lg mx-auto mb-8\">\n        Our AI is analyzing market data, identifying target audiences, and\n        drafting your comprehensive business plan. Please wait a moment.\n      </p>\n      <div className=\"max-w-md mx-auto\">\n        <Progress value={progress} className=\"h-2\" />\n        <p className=\"text-sm text-slate-500 mt-2 font-medium\">\n          {Math.round(progress)}% Complete\n        </p>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default GeneratingMvpPlan;\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;AAMA,MAAM,oBAAsD,CAAC,EAAE,QAAQ,EAAE;IACvE,qBACE,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;QACT,SAAS;YAAE,SAAS;YAAG,GAAG;QAAG;QAC7B,SAAS;YAAE,SAAS;YAAG,GAAG;QAAE;QAC5B,MAAM;YAAE,SAAS;YAAG,GAAG,CAAC;QAAG;QAC3B,YAAY;YAAE,UAAU;QAAI;QAC5B,WAAU;;0BAEV,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,+MAAA,CAAA,YAAS;oBACR,WAAU;oBACV,aAAa;;;;;;;;;;;0BAGjB,6LAAC;gBAAG,WAAU;0BAAkE;;;;;;0BAGhF,6LAAC;gBAAE,WAAU;0BAAuC;;;;;;0BAIpD,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,8IAAA,CAAA,WAAQ;wBAAC,OAAO;wBAAU,WAAU;;;;;;kCACrC,6LAAC;wBAAE,WAAU;;4BACV,KAAK,KAAK,CAAC;4BAAU;;;;;;;;;;;;;;;;;;;AAKhC;KA9BM;uCAgCS","debugId":null}},
    {"offset": {"line": 1545, "column": 0}, "map": {"version":3,"sources":["file:///Users/mediliass/Desktop/codebase/Labs/saas-templates/launchpad-ai/src/app/ideas/%5BideaId%5D/mvp-plan/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { mockIdeas } from \"@/data/ideas\";\nimport { Idea } from \"@/app/components/ideas/IdeaCard\";\nimport { Button } from \"@/app/components/ui/button\";\nimport { ArrowLeft } from \"lucide-react\";\nimport { Plan } from \"@/components/ideas/MvpPlanResult\";\nimport MvpPlanResult from \"@/components/ideas/MvpPlanResult\";\nimport GeneratingMvpPlan from \"@/components/ideas/GeneratingMvpPlan\";\nimport { useRouter } from \"next/navigation\";\n\n// This would be a call to an AI service in a real app\nconst generateBusinessPlanForIdea = (idea: Idea): Promise<Plan> => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      const plan = {\n        businessConcept: {\n          elevatorPitch: `An AI-powered SaaS tool based on \"${idea.title}\" that automatically generates SEO-optimized product descriptions for e-commerce businesses, enhancing search engine visibility and saving time.`,\n          problem: `E-commerce businesses often struggle to create unique, SEO-friendly product descriptions for ideas like \"${idea.description}\", leading to poor search engine rankings and reduced sales.`,\n          solution: `An AI-driven platform that generates high-quality, SEO-optimized product descriptions, reducing manual effort and improving online visibility.`,\n          targetAudience: \"Small to medium-sized online retailers.\",\n          uniqueValueProposition: `Automated, high-quality, SEO-optimized product descriptions tailored to individual products, enhancing search visibility and sales.`,\n        },\n        marketIntelligence: {\n          marketSize:\n            \"The global e-commerce market is projected to reach $6.3 trillion by 2024, indicating a vast potential customer base for tools that enhance online sales.\",\n          marketData: [\n            { name: \"TAM\", value: 6300, fill: \"hsl(var(--primary) / 0.6)\" },\n            { name: \"SAM\", value: 1500, fill: \"hsl(var(--primary) / 0.4)\" },\n            { name: \"SOM\", value: 50, fill: \"hsl(var(--primary) / 0.2)\" },\n          ],\n          trends: [\n            \"Increasing adoption of AI in content creation for e-commerce.\",\n            \"Growing demand for personalization in online shopping.\",\n            \"Shift towards direct-to-consumer (DTC) models.\",\n          ],\n          competitors: [\n            {\n              name: \"Jasper AI\",\n              strengths: \"Established brand, wide range of templates.\",\n              weaknesses: \"Can be expensive, less specialized in e-commerce.\",\n              gap: \"Opportunity for a focused, affordable solution for online stores.\",\n            },\n            {\n              name: \"Copy.ai\",\n              strengths: \"User-friendly interface, good for short-form copy.\",\n              weaknesses: \"SEO features are not as advanced.\",\n              gap: \"Provide superior SEO optimization features.\",\n            },\n          ],\n        },\n        productStrategy: {\n          coreFeatures: [\n            {\n              name: \"AI-Powered Description Generation\",\n              description:\n                \"Automatically generates SEO-optimized product descriptions based on product details.\",\n              priority: \"High\",\n              aiPowered: true,\n            },\n            {\n              name: \"SEO Analysis\",\n              description:\n                \"Evaluates and suggests improvements for product descriptions to enhance search engine visibility.\",\n              priority: \"High\",\n              aiPowered: true,\n            },\n            {\n              name: \"Bulk Processing\",\n              description:\n                \"Allows users to generate descriptions for multiple products simultaneously.\",\n              priority: \"Medium\",\n              aiPowered: true,\n            },\n          ],\n          futureFeatures: [\n            {\n              name: \"Multilingual Support\",\n              description:\n                \"Generate product descriptions in multiple languages to cater to a global audience.\",\n              priority: \"Medium\",\n              aiPowered: true,\n            },\n            {\n              name: \"E-commerce Platform Integration\",\n              description:\n                \"Seamless integration with major e-commerce platforms like Shopify and WooCommerce.\",\n              priority: \"High\",\n              aiPowered: false,\n            },\n          ],\n          mvpScope:\n            \"Develop a web-based application that allows users to input product details and receive AI-generated, SEO-optimized product descriptions.\",\n        },\n        goToMarket: {\n          strategy:\n            \"Leverage online marketing channels, partnerships with e-commerce platforms, and content marketing to reach target customers.\",\n          channels: [\n            \"Content marketing (blogs, SEO)\",\n            \"Social media advertising\",\n            \"Partnerships with e-commerce platforms\",\n          ],\n          initialTractionMetric:\n            \"Achieve 1,000 registered users within the first three months.\",\n        },\n        financials: {\n          model:\n            \"Subscription-based SaaS model with tiered pricing based on usage (e.g., Free, Basic, Pro).\",\n          monthlyBurn: 1500,\n          risks: [\n            {\n              risk: \"Limited initial capital\",\n              mitigation:\n                \"Focus on lean development and marketing strategies, leveraging free and low-cost tools.\",\n            },\n            {\n              risk: \"Competition from established players\",\n              mitigation:\n                \"Differentiate by focusing on affordability and user-friendliness for small to medium-sized businesses.\",\n            },\n          ],\n        },\n        evaluation: {\n          score: 7.5,\n          summary: `The idea for ${idea.title} has strong potential in a growing market. Success will depend on effective differentiation and execution of the go-to-market strategy.`,\n          strategicOptionalities: [\n            \"Expand into other forms of e-commerce content (e.g., ad copy, email campaigns).\",\n            \"Develop a B2B API for larger enterprises to integrate into their systems.\",\n          ],\n        },\n      };\n      resolve(plan);\n    }, 4000); // Simulate a longer generation time\n  });\n};\n\nconst MvpPlanPage = () => {\n  const { ideaId } = useParams<{ ideaId: string }>();\n  const router = useRouter();\n  const [idea, setIdea] = useState<Idea | null>(null);\n  const [isGenerating, setIsGenerating] = useState(true);\n  const [progress, setProgress] = useState(0);\n  const [generatedPlan, setGeneratedPlan] = useState<Plan | null>(null);\n\n  useEffect(() => {\n    const foundIdea = mockIdeas.find((i) => i.id.toString() === ideaId);\n    if (foundIdea) {\n      setIdea(foundIdea);\n    } else {\n      router.push(\"/ideas/list\");\n    }\n  }, [ideaId, router]);\n\n  useEffect(() => {\n    let interval: NodeJS.Timeout | undefined;\n    if (isGenerating && idea) {\n      interval = setInterval(() => {\n        setProgress((prev) => {\n          if (prev >= 90) {\n            clearInterval(interval);\n            return prev;\n          }\n          return prev + Math.floor(Math.random() * 10) + 2;\n        });\n      }, 400);\n\n      generateBusinessPlanForIdea(idea).then((plan) => {\n        setGeneratedPlan(plan);\n        setProgress(100);\n        setTimeout(() => setIsGenerating(false), 500);\n      });\n    }\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [isGenerating, idea]);\n\n  return (\n    <div className=\"min-h-screen bg-slate-50\">\n      <main className=\"max-w-7xl mx-auto p-4 sm:p-6 pt-28\">\n        <div className=\"mb-6\">\n          <Button variant=\"ghost\" onClick={() => router.push(\"/ideas/list\")}>\n            <ArrowLeft className=\"mr-2 h-4 w-4\" />\n            Back to Ideas\n          </Button>\n        </div>\n        <AnimatePresence mode=\"wait\">\n          {isGenerating ? (\n            <GeneratingMvpPlan key=\"generating\" progress={progress} />\n          ) : idea && generatedPlan ? (\n            <MvpPlanResult key=\"result\" idea={idea} plan={generatedPlan} />\n          ) : null}\n        </AnimatePresence>\n      </main>\n    </div>\n  );\n};\n\nexport default MvpPlanPage;\n"],"names":[],"mappings":"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","debugId":null}}]
}